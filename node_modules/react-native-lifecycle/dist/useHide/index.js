import { useEffect, useRef } from 'react';
import { AppState, Platform, } from 'react-native';
import { useNavigation } from '@react-navigation/native';
/**
 * Called when the page is hidden or in the application from foreground to background
 * @public
 */
export function useHide(fn) {
    const navigation = useNavigation();
    const AppStateRef = useRef();
    const onChange = (state) => {
        if (state ===
            Platform.select({
                ios: 'inactive',
                android: 'background',
            })) {
            fn();
        }
    };
    useEffect(() => {
        return navigation.addListener('focus', () => {
            AppStateRef.current = AppState.addEventListener('change', onChange);
        });
    }, [navigation]);
    useEffect(() => {
        return navigation.addListener('blur', () => {
            var _a, _b;
            (_b = (_a = AppStateRef.current) === null || _a === void 0 ? void 0 : _a.remove) === null || _b === void 0 ? void 0 : _b.call(_a);
        });
    }, [navigation]);
    useEffect(() => {
        return navigation.addListener('blur', fn);
    }, [navigation]);
}
